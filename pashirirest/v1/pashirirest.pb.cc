// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssigmaapi/pashirirest/v1/pashirirest.proto

#include "ssigmaapi/pashirirest/v1/pashirirest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ssigmaapi {
namespace pashirirest {
namespace v1 {
}  // namespace v1
}  // namespace pashirirest
}  // namespace ssigmaapi
namespace protobuf_ssigmaapi_2fpashirirest_2fv1_2fpashirirest_2eproto {
void InitDefaults() {
}

const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ssigmaapi/pashirirest/v1/pashirirest.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*ssigmaapi/pashirirest/v1/pashirirest.p"
      "roto\022\030ssigmaapi.pashirirest.v1\032\033ssigmaap"
      "i/type/market.proto\032\036ssigmaapi/type/orde"
      "rbook.proto2]\n\024PashiriRestServiceV1\022E\n\014G"
      "etOrderBook\022\026.ssigmaapi.type.Market\032\031.ss"
      "igmaapi.type.OrderBook\"\0000\001B:Z8github.com"
      "/kaito2/ssigmaapigo/pashirirest/v1;pashi"
      "rirestb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 294);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ssigmaapi/pashirirest/v1/pashirirest.proto", &protobuf_RegisterTypes);
  ::protobuf_ssigmaapi_2ftype_2fmarket_2eproto::AddDescriptors();
  ::protobuf_ssigmaapi_2ftype_2forderbook_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ssigmaapi_2fpashirirest_2fv1_2fpashirirest_2eproto
namespace ssigmaapi {
namespace pashirirest {
namespace v1 {

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace pashirirest
}  // namespace ssigmaapi
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
