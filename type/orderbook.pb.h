// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssigmaapi/type/orderbook.proto

#ifndef PROTOBUF_INCLUDED_ssigmaapi_2ftype_2forderbook_2eproto
#define PROTOBUF_INCLUDED_ssigmaapi_2ftype_2forderbook_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ssigmaapi_2ftype_2forderbook_2eproto 

namespace protobuf_ssigmaapi_2ftype_2forderbook_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ssigmaapi_2ftype_2forderbook_2eproto
namespace ssigmaapi {
namespace type {
class BidAsk;
class BidAskDefaultTypeInternal;
extern BidAskDefaultTypeInternal _BidAsk_default_instance_;
class OrderBook;
class OrderBookDefaultTypeInternal;
extern OrderBookDefaultTypeInternal _OrderBook_default_instance_;
}  // namespace type
}  // namespace ssigmaapi
namespace google {
namespace protobuf {
template<> ::ssigmaapi::type::BidAsk* Arena::CreateMaybeMessage<::ssigmaapi::type::BidAsk>(Arena*);
template<> ::ssigmaapi::type::OrderBook* Arena::CreateMaybeMessage<::ssigmaapi::type::OrderBook>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ssigmaapi {
namespace type {

// ===================================================================

class BidAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssigmaapi.type.BidAsk) */ {
 public:
  BidAsk();
  virtual ~BidAsk();

  BidAsk(const BidAsk& from);

  inline BidAsk& operator=(const BidAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BidAsk(BidAsk&& from) noexcept
    : BidAsk() {
    *this = ::std::move(from);
  }

  inline BidAsk& operator=(BidAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BidAsk& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BidAsk* internal_default_instance() {
    return reinterpret_cast<const BidAsk*>(
               &_BidAsk_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(BidAsk* other);
  friend void swap(BidAsk& a, BidAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BidAsk* New() const final {
    return CreateMaybeMessage<BidAsk>(NULL);
  }

  BidAsk* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BidAsk>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BidAsk& from);
  void MergeFrom(const BidAsk& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BidAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double price = 1;
  void clear_price();
  static const int kPriceFieldNumber = 1;
  double price() const;
  void set_price(double value);

  // double amount = 2;
  void clear_amount();
  static const int kAmountFieldNumber = 2;
  double amount() const;
  void set_amount(double value);

  // @@protoc_insertion_point(class_scope:ssigmaapi.type.BidAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double price_;
  double amount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ssigmaapi_2ftype_2forderbook_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderBook : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssigmaapi.type.OrderBook) */ {
 public:
  OrderBook();
  virtual ~OrderBook();

  OrderBook(const OrderBook& from);

  inline OrderBook& operator=(const OrderBook& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderBook(OrderBook&& from) noexcept
    : OrderBook() {
    *this = ::std::move(from);
  }

  inline OrderBook& operator=(OrderBook&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderBook& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderBook* internal_default_instance() {
    return reinterpret_cast<const OrderBook*>(
               &_OrderBook_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(OrderBook* other);
  friend void swap(OrderBook& a, OrderBook& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderBook* New() const final {
    return CreateMaybeMessage<OrderBook>(NULL);
  }

  OrderBook* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderBook>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderBook& from);
  void MergeFrom(const OrderBook& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderBook* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ssigmaapi.type.BidAsk bids = 5;
  int bids_size() const;
  void clear_bids();
  static const int kBidsFieldNumber = 5;
  ::ssigmaapi::type::BidAsk* mutable_bids(int index);
  ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::BidAsk >*
      mutable_bids();
  const ::ssigmaapi::type::BidAsk& bids(int index) const;
  ::ssigmaapi::type::BidAsk* add_bids();
  const ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::BidAsk >&
      bids() const;

  // repeated .ssigmaapi.type.BidAsk asks = 6;
  int asks_size() const;
  void clear_asks();
  static const int kAsksFieldNumber = 6;
  ::ssigmaapi::type::BidAsk* mutable_asks(int index);
  ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::BidAsk >*
      mutable_asks();
  const ::ssigmaapi::type::BidAsk& asks(int index) const;
  ::ssigmaapi::type::BidAsk* add_asks();
  const ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::BidAsk >&
      asks() const;

  // string exchange = 1;
  void clear_exchange();
  static const int kExchangeFieldNumber = 1;
  const ::std::string& exchange() const;
  void set_exchange(const ::std::string& value);
  #if LANG_CXX11
  void set_exchange(::std::string&& value);
  #endif
  void set_exchange(const char* value);
  void set_exchange(const char* value, size_t size);
  ::std::string* mutable_exchange();
  ::std::string* release_exchange();
  void set_allocated_exchange(::std::string* exchange);

  // string base = 2;
  void clear_base();
  static const int kBaseFieldNumber = 2;
  const ::std::string& base() const;
  void set_base(const ::std::string& value);
  #if LANG_CXX11
  void set_base(::std::string&& value);
  #endif
  void set_base(const char* value);
  void set_base(const char* value, size_t size);
  ::std::string* mutable_base();
  ::std::string* release_base();
  void set_allocated_base(::std::string* base);

  // string quote = 3;
  void clear_quote();
  static const int kQuoteFieldNumber = 3;
  const ::std::string& quote() const;
  void set_quote(const ::std::string& value);
  #if LANG_CXX11
  void set_quote(::std::string&& value);
  #endif
  void set_quote(const char* value);
  void set_quote(const char* value, size_t size);
  ::std::string* mutable_quote();
  ::std::string* release_quote();
  void set_allocated_quote(::std::string* quote);

  // string symbol = 4;
  void clear_symbol();
  static const int kSymbolFieldNumber = 4;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // int64 timestamp = 7;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 7;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ssigmaapi.type.OrderBook)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::BidAsk > bids_;
  ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::BidAsk > asks_;
  ::google::protobuf::internal::ArenaStringPtr exchange_;
  ::google::protobuf::internal::ArenaStringPtr base_;
  ::google::protobuf::internal::ArenaStringPtr quote_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::int64 timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ssigmaapi_2ftype_2forderbook_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BidAsk

// double price = 1;
inline void BidAsk::clear_price() {
  price_ = 0;
}
inline double BidAsk::price() const {
  // @@protoc_insertion_point(field_get:ssigmaapi.type.BidAsk.price)
  return price_;
}
inline void BidAsk::set_price(double value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:ssigmaapi.type.BidAsk.price)
}

// double amount = 2;
inline void BidAsk::clear_amount() {
  amount_ = 0;
}
inline double BidAsk::amount() const {
  // @@protoc_insertion_point(field_get:ssigmaapi.type.BidAsk.amount)
  return amount_;
}
inline void BidAsk::set_amount(double value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:ssigmaapi.type.BidAsk.amount)
}

// -------------------------------------------------------------------

// OrderBook

// string exchange = 1;
inline void OrderBook::clear_exchange() {
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderBook::exchange() const {
  // @@protoc_insertion_point(field_get:ssigmaapi.type.OrderBook.exchange)
  return exchange_.GetNoArena();
}
inline void OrderBook::set_exchange(const ::std::string& value) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ssigmaapi.type.OrderBook.exchange)
}
#if LANG_CXX11
inline void OrderBook::set_exchange(::std::string&& value) {
  
  exchange_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ssigmaapi.type.OrderBook.exchange)
}
#endif
inline void OrderBook::set_exchange(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ssigmaapi.type.OrderBook.exchange)
}
inline void OrderBook::set_exchange(const char* value, size_t size) {
  
  exchange_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ssigmaapi.type.OrderBook.exchange)
}
inline ::std::string* OrderBook::mutable_exchange() {
  
  // @@protoc_insertion_point(field_mutable:ssigmaapi.type.OrderBook.exchange)
  return exchange_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderBook::release_exchange() {
  // @@protoc_insertion_point(field_release:ssigmaapi.type.OrderBook.exchange)
  
  return exchange_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderBook::set_allocated_exchange(::std::string* exchange) {
  if (exchange != NULL) {
    
  } else {
    
  }
  exchange_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange);
  // @@protoc_insertion_point(field_set_allocated:ssigmaapi.type.OrderBook.exchange)
}

// string base = 2;
inline void OrderBook::clear_base() {
  base_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderBook::base() const {
  // @@protoc_insertion_point(field_get:ssigmaapi.type.OrderBook.base)
  return base_.GetNoArena();
}
inline void OrderBook::set_base(const ::std::string& value) {
  
  base_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ssigmaapi.type.OrderBook.base)
}
#if LANG_CXX11
inline void OrderBook::set_base(::std::string&& value) {
  
  base_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ssigmaapi.type.OrderBook.base)
}
#endif
inline void OrderBook::set_base(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  base_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ssigmaapi.type.OrderBook.base)
}
inline void OrderBook::set_base(const char* value, size_t size) {
  
  base_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ssigmaapi.type.OrderBook.base)
}
inline ::std::string* OrderBook::mutable_base() {
  
  // @@protoc_insertion_point(field_mutable:ssigmaapi.type.OrderBook.base)
  return base_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderBook::release_base() {
  // @@protoc_insertion_point(field_release:ssigmaapi.type.OrderBook.base)
  
  return base_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderBook::set_allocated_base(::std::string* base) {
  if (base != NULL) {
    
  } else {
    
  }
  base_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), base);
  // @@protoc_insertion_point(field_set_allocated:ssigmaapi.type.OrderBook.base)
}

// string quote = 3;
inline void OrderBook::clear_quote() {
  quote_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderBook::quote() const {
  // @@protoc_insertion_point(field_get:ssigmaapi.type.OrderBook.quote)
  return quote_.GetNoArena();
}
inline void OrderBook::set_quote(const ::std::string& value) {
  
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ssigmaapi.type.OrderBook.quote)
}
#if LANG_CXX11
inline void OrderBook::set_quote(::std::string&& value) {
  
  quote_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ssigmaapi.type.OrderBook.quote)
}
#endif
inline void OrderBook::set_quote(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ssigmaapi.type.OrderBook.quote)
}
inline void OrderBook::set_quote(const char* value, size_t size) {
  
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ssigmaapi.type.OrderBook.quote)
}
inline ::std::string* OrderBook::mutable_quote() {
  
  // @@protoc_insertion_point(field_mutable:ssigmaapi.type.OrderBook.quote)
  return quote_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderBook::release_quote() {
  // @@protoc_insertion_point(field_release:ssigmaapi.type.OrderBook.quote)
  
  return quote_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderBook::set_allocated_quote(::std::string* quote) {
  if (quote != NULL) {
    
  } else {
    
  }
  quote_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quote);
  // @@protoc_insertion_point(field_set_allocated:ssigmaapi.type.OrderBook.quote)
}

// string symbol = 4;
inline void OrderBook::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderBook::symbol() const {
  // @@protoc_insertion_point(field_get:ssigmaapi.type.OrderBook.symbol)
  return symbol_.GetNoArena();
}
inline void OrderBook::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ssigmaapi.type.OrderBook.symbol)
}
#if LANG_CXX11
inline void OrderBook::set_symbol(::std::string&& value) {
  
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ssigmaapi.type.OrderBook.symbol)
}
#endif
inline void OrderBook::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ssigmaapi.type.OrderBook.symbol)
}
inline void OrderBook::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ssigmaapi.type.OrderBook.symbol)
}
inline ::std::string* OrderBook::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:ssigmaapi.type.OrderBook.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderBook::release_symbol() {
  // @@protoc_insertion_point(field_release:ssigmaapi.type.OrderBook.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderBook::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:ssigmaapi.type.OrderBook.symbol)
}

// repeated .ssigmaapi.type.BidAsk bids = 5;
inline int OrderBook::bids_size() const {
  return bids_.size();
}
inline void OrderBook::clear_bids() {
  bids_.Clear();
}
inline ::ssigmaapi::type::BidAsk* OrderBook::mutable_bids(int index) {
  // @@protoc_insertion_point(field_mutable:ssigmaapi.type.OrderBook.bids)
  return bids_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::BidAsk >*
OrderBook::mutable_bids() {
  // @@protoc_insertion_point(field_mutable_list:ssigmaapi.type.OrderBook.bids)
  return &bids_;
}
inline const ::ssigmaapi::type::BidAsk& OrderBook::bids(int index) const {
  // @@protoc_insertion_point(field_get:ssigmaapi.type.OrderBook.bids)
  return bids_.Get(index);
}
inline ::ssigmaapi::type::BidAsk* OrderBook::add_bids() {
  // @@protoc_insertion_point(field_add:ssigmaapi.type.OrderBook.bids)
  return bids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::BidAsk >&
OrderBook::bids() const {
  // @@protoc_insertion_point(field_list:ssigmaapi.type.OrderBook.bids)
  return bids_;
}

// repeated .ssigmaapi.type.BidAsk asks = 6;
inline int OrderBook::asks_size() const {
  return asks_.size();
}
inline void OrderBook::clear_asks() {
  asks_.Clear();
}
inline ::ssigmaapi::type::BidAsk* OrderBook::mutable_asks(int index) {
  // @@protoc_insertion_point(field_mutable:ssigmaapi.type.OrderBook.asks)
  return asks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::BidAsk >*
OrderBook::mutable_asks() {
  // @@protoc_insertion_point(field_mutable_list:ssigmaapi.type.OrderBook.asks)
  return &asks_;
}
inline const ::ssigmaapi::type::BidAsk& OrderBook::asks(int index) const {
  // @@protoc_insertion_point(field_get:ssigmaapi.type.OrderBook.asks)
  return asks_.Get(index);
}
inline ::ssigmaapi::type::BidAsk* OrderBook::add_asks() {
  // @@protoc_insertion_point(field_add:ssigmaapi.type.OrderBook.asks)
  return asks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::BidAsk >&
OrderBook::asks() const {
  // @@protoc_insertion_point(field_list:ssigmaapi.type.OrderBook.asks)
  return asks_;
}

// int64 timestamp = 7;
inline void OrderBook::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderBook::timestamp() const {
  // @@protoc_insertion_point(field_get:ssigmaapi.type.OrderBook.timestamp)
  return timestamp_;
}
inline void OrderBook::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ssigmaapi.type.OrderBook.timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace type
}  // namespace ssigmaapi

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ssigmaapi_2ftype_2forderbook_2eproto
