// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssigmaapi/type/orderbook.proto

#include "ssigmaapi/type/orderbook.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ssigmaapi_2ftype_2forderbook_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ssigmaapi_2ftype_2forderbook_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BidAsk;
}  // namespace protobuf_ssigmaapi_2ftype_2forderbook_2eproto
namespace ssigmaapi {
namespace type {
class BidAskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BidAsk>
      _instance;
} _BidAsk_default_instance_;
class OrderBookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderBook>
      _instance;
} _OrderBook_default_instance_;
}  // namespace type
}  // namespace ssigmaapi
namespace protobuf_ssigmaapi_2ftype_2forderbook_2eproto {
static void InitDefaultsBidAsk() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ssigmaapi::type::_BidAsk_default_instance_;
    new (ptr) ::ssigmaapi::type::BidAsk();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ssigmaapi::type::BidAsk::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BidAsk =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBidAsk}, {}};

static void InitDefaultsOrderBook() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ssigmaapi::type::_OrderBook_default_instance_;
    new (ptr) ::ssigmaapi::type::OrderBook();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ssigmaapi::type::OrderBook::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OrderBook =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrderBook}, {
      &protobuf_ssigmaapi_2ftype_2forderbook_2eproto::scc_info_BidAsk.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BidAsk.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderBook.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ssigmaapi::type::BidAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ssigmaapi::type::BidAsk, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ssigmaapi::type::BidAsk, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ssigmaapi::type::OrderBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ssigmaapi::type::OrderBook, exchange_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ssigmaapi::type::OrderBook, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ssigmaapi::type::OrderBook, quote_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ssigmaapi::type::OrderBook, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ssigmaapi::type::OrderBook, bids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ssigmaapi::type::OrderBook, asks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ssigmaapi::type::OrderBook, timestamp_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ssigmaapi::type::BidAsk)},
  { 7, -1, sizeof(::ssigmaapi::type::OrderBook)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ssigmaapi::type::_BidAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ssigmaapi::type::_OrderBook_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ssigmaapi/type/orderbook.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\036ssigmaapi/type/orderbook.proto\022\016ssigma"
      "api.type\"\'\n\006BidAsk\022\r\n\005price\030\001 \001(\001\022\016\n\006amo"
      "unt\030\002 \001(\001\"\251\001\n\tOrderBook\022\020\n\010exchange\030\001 \001("
      "\t\022\014\n\004base\030\002 \001(\t\022\r\n\005quote\030\003 \001(\t\022\016\n\006symbol"
      "\030\004 \001(\t\022$\n\004bids\030\005 \003(\0132\026.ssigmaapi.type.Bi"
      "dAsk\022$\n\004asks\030\006 \003(\0132\026.ssigmaapi.type.BidA"
      "sk\022\021\n\ttimestamp\030\007 \001(\003B8Z6github.com/kait"
      "o2/ssigmaapigo/type/orderbook;orderbookb"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 327);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ssigmaapi/type/orderbook.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ssigmaapi_2ftype_2forderbook_2eproto
namespace ssigmaapi {
namespace type {

// ===================================================================

void BidAsk::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BidAsk::kPriceFieldNumber;
const int BidAsk::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BidAsk::BidAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ssigmaapi_2ftype_2forderbook_2eproto::scc_info_BidAsk.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ssigmaapi.type.BidAsk)
}
BidAsk::BidAsk(const BidAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&price_)) + sizeof(amount_));
  // @@protoc_insertion_point(copy_constructor:ssigmaapi.type.BidAsk)
}

void BidAsk::SharedCtor() {
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&price_)) + sizeof(amount_));
}

BidAsk::~BidAsk() {
  // @@protoc_insertion_point(destructor:ssigmaapi.type.BidAsk)
  SharedDtor();
}

void BidAsk::SharedDtor() {
}

void BidAsk::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BidAsk::descriptor() {
  ::protobuf_ssigmaapi_2ftype_2forderbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssigmaapi_2ftype_2forderbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BidAsk& BidAsk::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ssigmaapi_2ftype_2forderbook_2eproto::scc_info_BidAsk.base);
  return *internal_default_instance();
}


void BidAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ssigmaapi.type.BidAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&price_)) + sizeof(amount_));
  _internal_metadata_.Clear();
}

bool BidAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ssigmaapi.type.BidAsk)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double price = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ssigmaapi.type.BidAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ssigmaapi.type.BidAsk)
  return false;
#undef DO_
}

void BidAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ssigmaapi.type.BidAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double price = 1;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->price(), output);
  }

  // double amount = 2;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ssigmaapi.type.BidAsk)
}

::google::protobuf::uint8* BidAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ssigmaapi.type.BidAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double price = 1;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->price(), target);
  }

  // double amount = 2;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ssigmaapi.type.BidAsk)
  return target;
}

size_t BidAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ssigmaapi.type.BidAsk)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double price = 1;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  // double amount = 2;
  if (this->amount() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BidAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ssigmaapi.type.BidAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BidAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BidAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ssigmaapi.type.BidAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ssigmaapi.type.BidAsk)
    MergeFrom(*source);
  }
}

void BidAsk::MergeFrom(const BidAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ssigmaapi.type.BidAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void BidAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ssigmaapi.type.BidAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidAsk::CopyFrom(const BidAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ssigmaapi.type.BidAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidAsk::IsInitialized() const {
  return true;
}

void BidAsk::Swap(BidAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BidAsk::InternalSwap(BidAsk* other) {
  using std::swap;
  swap(price_, other->price_);
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BidAsk::GetMetadata() const {
  protobuf_ssigmaapi_2ftype_2forderbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssigmaapi_2ftype_2forderbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderBook::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderBook::kExchangeFieldNumber;
const int OrderBook::kBaseFieldNumber;
const int OrderBook::kQuoteFieldNumber;
const int OrderBook::kSymbolFieldNumber;
const int OrderBook::kBidsFieldNumber;
const int OrderBook::kAsksFieldNumber;
const int OrderBook::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderBook::OrderBook()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ssigmaapi_2ftype_2forderbook_2eproto::scc_info_OrderBook.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ssigmaapi.type.OrderBook)
}
OrderBook::OrderBook(const OrderBook& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bids_(from.bids_),
      asks_(from.asks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange().size() > 0) {
    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  base_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.base().size() > 0) {
    base_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_);
  }
  quote_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.quote().size() > 0) {
    quote_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quote_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:ssigmaapi.type.OrderBook)
}

void OrderBook::SharedCtor() {
  exchange_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_LONGLONG(0);
}

OrderBook::~OrderBook() {
  // @@protoc_insertion_point(destructor:ssigmaapi.type.OrderBook)
  SharedDtor();
}

void OrderBook::SharedDtor() {
  exchange_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OrderBook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderBook::descriptor() {
  ::protobuf_ssigmaapi_2ftype_2forderbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssigmaapi_2ftype_2forderbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderBook& OrderBook::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ssigmaapi_2ftype_2forderbook_2eproto::scc_info_OrderBook.base);
  return *internal_default_instance();
}


void OrderBook::Clear() {
// @@protoc_insertion_point(message_clear_start:ssigmaapi.type.OrderBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bids_.Clear();
  asks_.Clear();
  exchange_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool OrderBook::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ssigmaapi.type.OrderBook)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string exchange = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange().data(), static_cast<int>(this->exchange().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ssigmaapi.type.OrderBook.exchange"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string base = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->base().data(), static_cast<int>(this->base().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ssigmaapi.type.OrderBook.base"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string quote = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_quote()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->quote().data(), static_cast<int>(this->quote().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ssigmaapi.type.OrderBook.quote"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ssigmaapi.type.OrderBook.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ssigmaapi.type.BidAsk bids = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ssigmaapi.type.BidAsk asks = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_asks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ssigmaapi.type.OrderBook)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ssigmaapi.type.OrderBook)
  return false;
#undef DO_
}

void OrderBook::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ssigmaapi.type.OrderBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), static_cast<int>(this->exchange().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ssigmaapi.type.OrderBook.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange(), output);
  }

  // string base = 2;
  if (this->base().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base().data(), static_cast<int>(this->base().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ssigmaapi.type.OrderBook.base");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->base(), output);
  }

  // string quote = 3;
  if (this->quote().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quote().data(), static_cast<int>(this->quote().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ssigmaapi.type.OrderBook.quote");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->quote(), output);
  }

  // string symbol = 4;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ssigmaapi.type.OrderBook.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->symbol(), output);
  }

  // repeated .ssigmaapi.type.BidAsk bids = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->bids(static_cast<int>(i)),
      output);
  }

  // repeated .ssigmaapi.type.BidAsk asks = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->asks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->asks(static_cast<int>(i)),
      output);
  }

  // int64 timestamp = 7;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ssigmaapi.type.OrderBook)
}

::google::protobuf::uint8* OrderBook::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ssigmaapi.type.OrderBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string exchange = 1;
  if (this->exchange().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange().data(), static_cast<int>(this->exchange().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ssigmaapi.type.OrderBook.exchange");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange(), target);
  }

  // string base = 2;
  if (this->base().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base().data(), static_cast<int>(this->base().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ssigmaapi.type.OrderBook.base");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->base(), target);
  }

  // string quote = 3;
  if (this->quote().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quote().data(), static_cast<int>(this->quote().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ssigmaapi.type.OrderBook.quote");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->quote(), target);
  }

  // string symbol = 4;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ssigmaapi.type.OrderBook.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->symbol(), target);
  }

  // repeated .ssigmaapi.type.BidAsk bids = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->bids(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ssigmaapi.type.BidAsk asks = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->asks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->asks(static_cast<int>(i)), deterministic, target);
  }

  // int64 timestamp = 7;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ssigmaapi.type.OrderBook)
  return target;
}

size_t OrderBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ssigmaapi.type.OrderBook)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ssigmaapi.type.BidAsk bids = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->bids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bids(static_cast<int>(i)));
    }
  }

  // repeated .ssigmaapi.type.BidAsk asks = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->asks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->asks(static_cast<int>(i)));
    }
  }

  // string exchange = 1;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange());
  }

  // string base = 2;
  if (this->base().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base());
  }

  // string quote = 3;
  if (this->quote().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->quote());
  }

  // string symbol = 4;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // int64 timestamp = 7;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderBook::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ssigmaapi.type.OrderBook)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderBook* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderBook>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ssigmaapi.type.OrderBook)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ssigmaapi.type.OrderBook)
    MergeFrom(*source);
  }
}

void OrderBook::MergeFrom(const OrderBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ssigmaapi.type.OrderBook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bids_.MergeFrom(from.bids_);
  asks_.MergeFrom(from.asks_);
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.base().size() > 0) {

    base_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_);
  }
  if (from.quote().size() > 0) {

    quote_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quote_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void OrderBook::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ssigmaapi.type.OrderBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderBook::CopyFrom(const OrderBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ssigmaapi.type.OrderBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderBook::IsInitialized() const {
  return true;
}

void OrderBook::Swap(OrderBook* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderBook::InternalSwap(OrderBook* other) {
  using std::swap;
  CastToBase(&bids_)->InternalSwap(CastToBase(&other->bids_));
  CastToBase(&asks_)->InternalSwap(CastToBase(&other->asks_));
  exchange_.Swap(&other->exchange_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  base_.Swap(&other->base_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  quote_.Swap(&other->quote_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderBook::GetMetadata() const {
  protobuf_ssigmaapi_2ftype_2forderbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssigmaapi_2ftype_2forderbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace type
}  // namespace ssigmaapi
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ssigmaapi::type::BidAsk* Arena::CreateMaybeMessage< ::ssigmaapi::type::BidAsk >(Arena* arena) {
  return Arena::CreateInternal< ::ssigmaapi::type::BidAsk >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ssigmaapi::type::OrderBook* Arena::CreateMaybeMessage< ::ssigmaapi::type::OrderBook >(Arena* arena) {
  return Arena::CreateInternal< ::ssigmaapi::type::OrderBook >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
